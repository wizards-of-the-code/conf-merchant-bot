import { Markup } from 'telegraf';
import { Sponsor } from "../types";
import TelegramBot from "../TelegramBot";
import { InlineKeyboardButton } from "telegraf/typings/core/types/typegram";

const sponsorship = async (bot: TelegramBot) => {
    bot.action('action_become_sponsor', async (ctx) => {
        if (ctx.from) {
            const sponsor: Sponsor = {
                tg_id: ctx.from?.id,
                tg_first_name: ctx.from?.first_name,
                tg_last_name: ctx.from?.last_name,
                email: '',
                donation: '',
            }
            const result: boolean = await bot.dbManager.addSponsor(sponsor);

            const buttonsArray: (
                InlineKeyboardButton.CallbackButton | InlineKeyboardButton.UrlButton
            )[][] = [];
            const message: Array<string> = [];

            if (result) {
                ctx.editMessageReplyMarkup(undefined);
                buttonsArray.push( [Markup.button.url('–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É —Å–ø–æ–Ω—Å–æ—Ä–∞', 'https://peredelanoconf.com/')] )
                message.push('–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É!')
            } else {
                message.push('–í—ã —Å–Ω–æ–≤–∞ –Ω–∞—à —Å–ø–æ–Ω—Å–æ—Ä, —Å–ø–∞—Å–∏–±–æ –í–∞–º!')
            }

            buttonsArray.push(
                [Markup.button.callback('–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ', `more_info`)],
                [Markup.button.callback('–°–ø–æ–Ω—Å–æ—Ä—Å–∫–∏–π –ø–∞–∫–µ—Ç', `sponsorship_pack`)],
                [Markup.button.callback('–û–±—Å—É–¥–∏—Ç—å –≤–æ–ø—Ä–æ—Å—ã', `discussion`)],
                [Markup.button.callback('üîº –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'action_get_events')]
            )

            ctx.replyWithHTML(message.join('\n\n'), Markup.inlineKeyboard(buttonsArray));
        } else {
            throw new Error('Internal bot error.');
        }
    });
}

export default sponsorship;