import { Markup } from 'telegraf';
import { InlineKeyboardButton } from 'telegraf/typings/core/types/typegram';
import { Sponsor, TelegramUser } from '../types';
import TelegramBot from '../TelegramBot';

const createSponsor = async (ctx: any) => {
  if (!ctx.from) {
    throw new Error('Internal bot error.');
  }

  const user: TelegramUser = {
    id: ctx.from.id,
    username: ctx.from.username!,
    first_name: ctx.from.first_name,
    last_name: ctx.from.last_name,
  };

  const sponsor: Sponsor = {
    tg: user,
    donation: '',
  };

  return ctx.dbManager.insertOrUpdateDocumentToCollection('sponsors', { 'tg.id': user.id }, { $set: sponsor });
};

const sponsorship = async (bot: TelegramBot) => {
  bot.action('become_sponsor', async (ctx) => {
    const result = await createSponsor(ctx);

    const buttonsArray: (
      InlineKeyboardButton.CallbackButton | InlineKeyboardButton.UrlButton
    )[][] = [];

    if (result) {
      ctx.editMessageReplyMarkup(undefined);
      buttonsArray.push([Markup.button.url('–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É —Å–ø–æ–Ω—Å–æ—Ä–∞', 'https://peredelanoconf.com/')]);
      ctx.reply('–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É!');
    } else {
      ctx.reply('–í—ã —Å–Ω–æ–≤–∞ –Ω–∞—à —Å–ø–æ–Ω—Å–æ—Ä, —Å–ø–∞—Å–∏–±–æ –í–∞–º!');
    }

    buttonsArray.push(
      [Markup.button.callback('–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ', 'more_info')],
      [Markup.button.callback('–°–ø–æ–Ω—Å–æ—Ä—Å–∫–∏–π –ø–∞–∫–µ—Ç', 'sponsorship_pack')],
      [Markup.button.callback('–û–±—Å—É–¥–∏—Ç—å –≤–æ–ø—Ä–æ—Å—ã', 'discussion')],
      [Markup.button.callback('üîº –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'action_get_events')],
    );

    ctx.replyWithHTML('', Markup.inlineKeyboard(buttonsArray));
  });
};

export default sponsorship;
